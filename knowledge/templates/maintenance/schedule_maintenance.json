{
  "template_metadata": {
    "name": "schedule_maintenance",
    "version": "1.0",
    "category": "maintenance",
    "description": "Schedules maintenance appointment for a vehicle",
    "required_entities": ["vehicle_id", "maintenance_type", "date"],
    "optional_entities": ["time", "technician", "location", "priority"],
    "api_endpoint": "/api/v1/maintenance/schedule",
    "http_method": "POST"
  },
  "template": {
    "vehicle_id": "{vehicle_id}",
    "maintenance_request": {
      "type": "{maintenance_type}",
      "priority": "{priority|normal}",
      "description": "{description|Scheduled maintenance}",
      "category": "{category|preventive}"
    },
    "scheduling": {
      "requested_date": "{date}",
      "requested_time": "{time|09:00}",
      "duration_hours": "{duration|2}",
      "flexible_scheduling": "{flexible|true}"
    },
    "assignment": {
      "technician_id": "{technician|null}",
      "service_location": "{location|main_garage}",
      "bay_preference": "{bay|null}"
    },
    "parts_and_services": {
      "estimated_parts_needed": "{parts|[]}",
      "service_checklist": "{checklist|[]}",
      "special_instructions": "{instructions|null}"
    },
    "contact_information": {
      "requestor": "{requestor|system}",
      "contact_phone": "{phone|null}",
      "contact_email": "{email|null}",
      "notification_preferences": "{notifications|email}"
    },
    "metadata": {
      "created_at": "{current_timestamp}",
      "status": "scheduled",
      "estimated_cost": "{cost|null}",
      "work_order_number": "{work_order|auto_generate}"
    }
  },
  "validation_rules": {
    "vehicle_id": {
      "required": true,
      "type": "string",
      "pattern": "^[A-Z0-9-]{3,15}$"
    },
    "maintenance_type": {
      "required": true,
      "type": "string",
      "allowed_values": ["oil_change", "tire_rotation", "brake_service", "inspection", "repair", "preventive", "emergency"]
    },
    "date": {
      "required": true,
      "type": "string",
      "format": "date"
    },
    "time": {
      "type": "string",
      "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
    },
    "priority": {
      "type": "string",
      "allowed_values": ["low", "normal", "high", "urgent"]
    },
    "duration": {
      "type": "number",
      "min": 0.5,
      "max": 24
    }
  }
}